{"version":3,"sources":["actions/list.js","reducers/list.js","actions/team.js","reducers/team.js","store.js","App.js","List.js","Team.js","NotFound.js","router.js","serviceWorker.js","index.js"],"names":["SET_TEAMS","initialState","teams","listReducer","state","action","type","Object","assign","SET_PLAYERS","SET_PAGES","squad","teamReducer","pages","reducers","combineReducers","listState","teamState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","List","props","name","sortDirection","handleChangeName","bind","event","this","setState","target","value","id","map","team","isActive","index","findIndex","slice","concat","e","key","saveName","field","sort","a","b","fetch","headers","then","data","json","res","dispatch","error","Table","striped","bordered","hover","variant","onClick","sortBy","className","getState","changeName","Form","Group","controlId","Label","Control","autoFocus","placeholder","onBlur","onKeyDown","handleEnter","onChange","tla","venue","founded","src","crestUrl","alt","width","height","to","Button","deleteTeam","React","Component","connect","Team","filters","position","nationality","perPage","currentPage","handleChangeNationality","handleChangePosition","changePage","items","page","params","match","item","Math","ceil","length","findCountryCode","entry","entries","Countries","find","country","push","Pagination","Item","active","as","Array","from","Set","filter","i","current","code","fallback","format","date","dateOfBirth","First","Prev","Next","Last","NotFound","router","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+tJAIaA,EAAY,YCAzB,IAAMC,EAAe,CACnBC,MAAO,IAcMC,MAXf,WAAoD,IAA/BC,EAA8B,uDAAtBH,EAAcI,EAAQ,uCACjD,OAAQA,EAAOC,MACb,KAAKN,EACH,OAAOO,OAAOC,OAAO,GAAIJ,EAAO,CAC9BF,MAAOG,EAAOH,QAElB,QACE,OAAOE,ICXAK,EAAc,cACdC,EAAY,YCAvB,IAAMT,EAAe,CACnBU,MAAO,IAkBMC,MAff,WAAoD,IAA/BR,EAA8B,uDAAtBH,EAAcI,EAAQ,uCACjD,OAAQA,EAAOC,MACb,KAAKG,EACH,OAAOF,OAAOC,OAAO,GAAIJ,EAAO,CAC5BO,MAAON,EAAOM,QAEpB,KAAKD,EACH,OAAOH,OAAOC,OAAO,GAAIJ,EAAO,CAC5BS,MAAOR,EAAOQ,QAEpB,QACE,OAAOT,IChBTU,EAAWC,YAAgB,CAC/BC,UAAWb,EACXc,UAAWL,IAQEM,EALDC,YACZL,EACAM,OAAOC,8BAAgCD,OAAOC,gC,gBCHjCC,MANf,WACE,OACE,qC,wECEEC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDpB,MAAQ,CACXF,MAAO,GACPuB,KAAM,GACNC,cAAe,OAEjB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBAPP,E,8EAUFC,GACfC,KAAKC,SAAS,CAACN,KAAMI,EAAMG,OAAOC,U,iCAGzBC,GACTJ,KAAKC,SAAS,CACZ7B,MAAO4B,KAAK1B,MAAMF,MAAMiC,KAAI,SAAAC,GAE1B,OADIA,EAAKF,KAAOA,IAAIE,EAAKC,UAAW,GAC7BD,S,+BAKJF,GAAK,IAAD,OACXJ,KAAKC,SAAS,CACZ7B,MAAO4B,KAAK1B,MAAMF,MAAMiC,KAAI,SAAAC,GAK1B,OAJIA,EAAKF,KAAOA,IACU,KAApB,EAAK9B,MAAMqB,OAAaW,EAAKX,KAAO,EAAKrB,MAAMqB,MACnDW,EAAKC,UAAW,GAEXD,KAETX,KAAM,O,iCAICS,GACT,IAAII,EAAQR,KAAK1B,MAAMF,MAAMqC,WAAU,SAAAH,GAAI,OAAIA,EAAKF,KAAOA,KAC3DJ,KAAKC,SAAS,CACZ7B,MAAO4B,KAAK1B,MAAMF,MAAMsC,MAAM,EAAGF,GAAOG,OAAOX,KAAK1B,MAAMF,MAAMsC,MAAMF,EAAQ,Q,kCAItEJ,EAAIQ,GACA,UAAVA,EAAEC,KACJb,KAAKc,SAASV,K,6BAIXW,GACL,IAAI3C,EAAQ4B,KAAK1B,MAAMF,MAAMsC,QACzBd,EAAgBI,KAAK1B,MAAMsB,cAC/BxB,EAAM4C,MAAK,SAACC,EAAGC,GACb,OAAID,EAAEF,GAASG,EAAEH,GACU,SAAlBnB,EAA2B,GAAK,EAErCqB,EAAEF,GAASG,EAAEH,GACU,SAAlBnB,GAA4B,EAAI,EAElC,KAETI,KAAKC,SAAS,CACZ7B,MAAOA,EACPwB,cAA4C,QAA7BI,KAAK1B,MAAMsB,cAA0B,OAAS,U,0CAI5C,IAAD,OAClBuB,MAAM,uEAAwE,CAC5EC,QAAS,CACP,eAAgB,sCAGnBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAACG,GACHpC,EAAMqC,SAAS,CACbjD,KAAM,YACNJ,MAAOoD,EAAIpD,MAAMiC,KAAI,SAAAC,GAEnB,OADAA,EAAKC,UAAW,EACTD,UAMb,SAACoB,GACC,EAAKzB,SAAS,CACZyB,e,+BAME,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QACpC,+BACE,4BACE,iCACA,wBAAIC,QAAShC,KAAKiC,OAAOnC,KAAKE,KAAM,QAASkC,UAAU,WAAvD,+FACA,4FACA,0EACA,wBAAIF,QAAShC,KAAKiC,OAAOnC,KAAKE,KAAM,WAAYkC,UAAU,WAA1D,6EACA,0EACA,kFAGJ,+BAEI9C,EAAM+C,WAAWjD,UAAUd,MAAMiC,KAAI,SAACC,EAAME,GAAP,OACnC,wBAAIK,IAAKP,EAAKF,IACZ,4BAAKI,EAAQ,GACb,wBAAIwB,QAAS,EAAKI,WAAWtC,KAAK,EAAMQ,EAAKF,KACzCE,EAAKC,SACL,kBAAC8B,EAAA,EAAKC,MAAN,CAAYC,UAAU,QACpB,kBAACF,EAAA,EAAKG,MAAN,oGACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,WAAS,EACTC,YAAY,mDACZC,OAAQ,EAAK9B,SAAShB,KAAK,EAAMQ,EAAKF,IACtCyC,UAAW,SAACjC,GAAD,OAAO,EAAKkC,YAAYxC,EAAKF,GAAIQ,IAC5CsB,UAAU,aACV/B,MAAO,EAAK7B,MAAMqB,KAClBoD,SAAU,EAAKlD,oBAGfS,EAAKX,MAGb,4BAAKW,EAAK0C,KACV,4BAAK1C,EAAK2C,OACV,4BAAK3C,EAAK4C,SACV,4BAAI,yBAAKC,IAAK7C,EAAK8C,SAAUC,IAAK/C,EAAKX,KAAM2D,MAAM,KAAKC,OAAO,QAC/D,4BACE,kBAAC,IAAD,CAAMC,GAAE,iBAAYlD,EAAKF,KACvB,kBAACqD,EAAA,EAAD,CAAQ1B,QAAQ,WAAhB,2DAEF,kBAAC0B,EAAA,EAAD,CAAQ1B,QAAQ,SAASC,QAAS,EAAK0B,WAAW5D,KAAK,EAAMQ,EAAKF,KAAlE,yD,GA1ICuD,IAAMC,WA2JVC,eANS,SAASzE,GAC/B,MAAO,CACLhB,MAAOgB,EAAMF,UAAUd,SAIZyF,CAAyBpE,G,kDCxJlCqE,E,YACJ,WAAYpE,GAAQ,IAAD,8BACjB,4CAAMA,KACDpB,MAAQ,CACXO,MAAO,GACPc,KAAM,GACNoE,QAAS,CACPC,SAAU,GACVC,YAAa,IAEflF,MAAO,EACPmF,QAAS,GACTC,YAAa,EACbvE,cAAe,OAEjB,EAAKwE,wBAA0B,EAAKA,wBAAwBtE,KAA7B,gBAC/B,EAAKuE,qBAAuB,EAAKA,qBAAqBvE,KAA1B,gBAC5B,EAAKwE,WAAa,EAAKA,WAAWxE,KAAhB,gBAhBD,E,oEAmBZiB,GACL,IAAIwD,EAAQvE,KAAK1B,MAAMO,MAAM6B,QACzBd,EAAgBI,KAAK1B,MAAMsB,cAC/B2E,EAAMvD,MAAK,SAACC,EAAGC,GACb,OAAID,EAAEF,GAASG,EAAEH,GACU,SAAlBnB,EAA2B,GAAK,EAErCqB,EAAEF,GAASG,EAAEH,GACU,SAAlBnB,GAA4B,EAAI,EAElC,KAETI,KAAKC,SAAS,CACZpB,MAAO0F,EACP3E,cAA4C,QAA7BI,KAAK1B,MAAMsB,cAA0B,OAAS,U,8CAIzCG,GACtBC,KAAKC,SAAS,CAAC8D,QAAS,CACtBE,YAAalE,EAAMG,OAAOC,MAC1B6D,SAAUhE,KAAK1B,MAAMyF,QAAQC,c,2CAIZjE,GACnBC,KAAKC,SAAS,CAAC8D,QAAS,CACtBC,SAAUjE,EAAMG,OAAOC,MACvB8D,YAAajE,KAAK1B,MAAMyF,QAAQE,iB,iCAIzBO,GACTxE,KAAKC,SAAS,CAACkE,YAAaK,M,0CAGT,IAAD,OACVC,EAAWzE,KAAKN,MAAMgF,MAAtBD,OACRtD,MAAM,0CAAD,OAA2CsD,EAAOrE,IAAM,CAC3DgB,QAAS,CACP,eAAgB,sCAGnBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MACC,SAACG,GAECpC,EAAMqC,SAAS,CACbjD,KAAM,cACNK,MAAO2C,EAAI3C,MAAMwB,KAAI,SAAAsE,GAEnB,OADKA,EAAKX,WAAUW,EAAKX,SAAW,SAC7BW,OAIXvF,EAAMqC,SAAS,CACbjD,KAAM,YACNO,MAAO6F,KAAKC,KAAKrD,EAAI3C,MAAMiG,OAAS,SAcxC,SAACpD,GACC,EAAKzB,SAAS,CACZyB,e,+BAME,IAAD,OACP,SAASqD,EAAgBd,GACvB,IAAMe,EAAQvG,OAAOwG,QAAQC,GAAWC,MAAK,SAACC,GAAD,OAAaA,EAAQ,KAAOnB,KACzE,OAAOe,EAAQA,EAAM,GAAK,WAI5B,IADA,IAAIT,EAAQ,GANL,WAOEC,GACPD,EAAMc,KACJ,kBAACC,EAAA,EAAWC,KAAZ,CACE1E,IAAK2D,EACLgB,OAAQhB,IAAS,EAAKlG,MAAM6F,YAC5BnC,QAAS,kBAAM,EAAKsC,WAAWE,KAE9BA,KAPEA,EAAO,EAAGA,GAAQpF,EAAM+C,WAAWhD,UAAUJ,MAAOyF,IAAS,EAA7DA,GAYT,OACE,6BACE,kBAAC7C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,QACpC,+BACE,4BACE,iCACA,wBAAIC,QAAShC,KAAKiC,OAAOnC,KAAKE,KAAM,QAASkC,UAAU,WAAvD,wEACA,4BACE,kHACA,kBAACG,EAAA,EAAKI,QAAN,CACEgD,GAAG,SACHtF,MAAOH,KAAK1B,MAAMyF,QAAQC,SAC1BjB,SAAU/C,KAAKqE,sBAEjB,4BAAQxD,IAAI,IAAIV,MAAM,IAAtB,sBAEIuF,MAAMC,KAAK,IAAIC,IAAIxG,EAAM+C,WAAWhD,UAAUN,MAAMwB,KAAI,SAAAsE,GAAI,OAAIA,EAAKX,cAClE3D,KAAI,SAACsE,EAAMnE,GAAP,OACH,4BAAQK,IAAKL,EAAQ,EAAGL,MAAOwE,GAAOA,QAKhD,4BACE,sHACA,kBAACtC,EAAA,EAAKI,QAAN,CACEgD,GAAG,SACHtF,MAAOH,KAAK1B,MAAMyF,QAAQE,YAC1BlB,SAAU/C,KAAKoE,yBAEjB,4BAAQvD,IAAI,IAAIV,MAAM,IAAtB,sBAEIuF,MAAMC,KAAK,IAAIC,IAAIxG,EAAM+C,WAAWhD,UAAUN,MAAMwB,KAAI,SAAAsE,GAAI,OAAIA,EAAKV,iBAClE5D,KAAI,SAACsE,EAAMnE,GAAP,OACH,4BAAQK,IAAKL,EAAQ,EAAGL,MAAOwE,GAAOA,QAKhD,wBAAI3C,QAAShC,KAAKiC,OAAOnC,KAAKE,KAAM,eAAgBkC,UAAU,WAA9D,+EAGJ,+BAEI9C,EAAM+C,WAAWhD,UAAUN,MAC1BgH,QAAO,SAAAlB,GACN,IAAIV,EAAc,EAAK3F,MAAMyF,QAAQE,YACjCD,EAAW,EAAK1F,MAAMyF,QAAQC,SAClC,KAAMC,GAAeU,EAAKV,cAAgBA,MACrCD,GAAYW,EAAKX,WAAaA,GAAW,OAAOW,KAEtDkB,QAAO,SAAClB,EAAMmB,GACb,IAAIC,EAAU,EAAKzH,MAAM6F,YACrBD,EAAU,EAAK5F,MAAM4F,QACzB,GAAK4B,EAAIC,EAAU7B,GAAa4B,IAAOC,EAAU,GAAK7B,EAAW,OAAOS,KAEzEtE,KAAI,SAACsE,EAAMnE,GAAP,OACH,wBAAIK,IAAK8D,EAAKvE,IACZ,6BAAM,EAAK9B,MAAM6F,YAAc,GAAK,EAAK7F,MAAM4F,QAAU1D,EAAQ,GACjE,4BAAKmE,EAAKhF,MACV,4BAAKgF,EAAKX,UACV,4BACE,kBAAC,IAAD,CACEgC,KAAMjB,EAAgBJ,EAAKV,aAC3B/B,UAAU,YACVoB,MAAO,IACPD,IAAKsB,EAAKV,YACVgC,SAAW,0BAAM/D,UAAU,aAAhB,cACVyC,EAAKV,aAEV,4BAAI,kBAAC,IAAD,CAAQiC,OAAO,aAAaC,KAAMxB,EAAKyB,qBAMrD,yBAAKlE,UAAU,iCACb,kBAACoD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWe,MAAZ,MACA,kBAACf,EAAA,EAAWgB,KAAZ,MAKC/B,EAKD,kBAACe,EAAA,EAAWiB,KAAZ,MACA,kBAACjB,EAAA,EAAWkB,KAAZ,a,GAhNO7C,IAAMC,WA+NVC,eAPS,SAASzE,GAC/B,MAAO,CACLP,MAAOO,EAAMD,UAAUN,MACvBE,MAAOK,EAAMD,UAAUJ,SAIZ8E,CAAyBC,GCpOzB2C,EAFE,kBAAM,0CCiBRC,EAXb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMlD,GAAG,UAAT,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,IAAIC,UAAWrH,IACjC,kBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,SAASC,UAAWpH,IACtC,kBAAC,IAAD,CAAOmH,KAAK,aAAaC,UAAW/C,IACpC,kBAAC,IAAD,CAAO+C,UAAWJ,M,YCFJK,QACW,cAA7BxH,OAAOyH,SAASC,UAEe,UAA7B1H,OAAOyH,SAASC,UAEhB1H,OAAOyH,SAASC,SAAStC,MACvB,2DCPNuC,IAASC,OAAO,kBAAC,IAAD,CAAU9H,MAAOA,GAAQsH,GAAoBS,SAASC,eAAe,SDsH/E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlG,MAAK,SAAAmG,GACjCA,EAAaC,kB","file":"static/js/main.31343348.chunk.js","sourcesContent":["/*\r\n * action types\r\n */\r\n\r\nexport const SET_TEAMS = 'SET_TEAMS'\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setTeams(teams) {\r\n  return { type: SET_TEAMS, teams }\r\n}\r\n","import {\r\n  SET_TEAMS\r\n} from '../actions/list'\r\n\r\nconst initialState = {\r\n  teams: []\r\n}\r\n\r\nfunction listReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_TEAMS:\r\n      return Object.assign({}, state, {\r\n        teams: action.teams\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default listReducer","/*\r\n * action types\r\n */\r\n\r\nexport const SET_PLAYERS = 'SET_PLAYERS'\r\nexport const SET_PAGES = 'SET_PAGES'\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setPlayers(squad) {\r\n  return { type: SET_PLAYERS, squad }\r\n}\r\n\r\nexport function setPages(pages) {\r\n  return { type: SET_PLAYERS, pages }\r\n}","import {\r\n    SET_PLAYERS,\r\n    SET_PAGES\r\n  } from '../actions/team'\r\n  \r\n  const initialState = {\r\n    squad: []\r\n  }\r\n  \r\n  function teamReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_PLAYERS:\r\n        return Object.assign({}, state, {\r\n            squad: action.squad\r\n        })\r\n      case SET_PAGES:\r\n        return Object.assign({}, state, {\r\n            pages: action.pages\r\n        })\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default teamReducer","import { createStore, combineReducers } from 'redux'\r\nimport listReducer from './reducers/list'\r\nimport teamReducer from './reducers/team'\r\n\r\nconst reducers = combineReducers({\r\n  listState: listReducer,\r\n  teamState: teamReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store","import React from 'react'\r\n\r\nfunction App() {\r\n  return (\r\n    <h1>Home</h1>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport store from './store';\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Form, Button } from 'react-bootstrap';\r\n\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      teams: [],\r\n      name: '',\r\n      sortDirection: 'asc',\r\n    }\r\n    this.handleChangeName = this.handleChangeName.bind(this)\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  changeName(id) {\r\n    this.setState({\r\n      teams: this.state.teams.map(team => {\r\n        if (team.id === id) team.isActive = true\r\n        return team\r\n      })\r\n    })\r\n  }\r\n\r\n  saveName(id) {\r\n    this.setState({\r\n      teams: this.state.teams.map(team => {\r\n        if (team.id === id) {\r\n          if (this.state.name !== '') team.name = this.state.name\r\n          team.isActive = false\r\n        }\r\n        return team\r\n      }),\r\n      name: ''\r\n    })\r\n  }\r\n\r\n  deleteTeam(id) {\r\n    let index = this.state.teams.findIndex(team => team.id === id)\r\n    this.setState({\r\n      teams: this.state.teams.slice(0, index).concat(this.state.teams.slice(index + 1))\r\n    })\r\n  }\r\n\r\n  handleEnter(id, e) {\r\n    if (e.key === 'Enter') {\r\n      this.saveName(id)\r\n    }\r\n  }\r\n\r\n  sortBy(field) {\r\n    let teams = this.state.teams.slice()\r\n    let sortDirection = this.state.sortDirection\r\n    teams.sort((a, b) => {\r\n      if (a[field] < b[field]) {\r\n        return sortDirection === 'desc' ? 1 : -1\r\n      }\r\n      if (a[field] > b[field]) {\r\n        return sortDirection === 'desc' ? -1 : 1\r\n      }\r\n      return 0\r\n    })\r\n    this.setState({\r\n      teams: teams,\r\n      sortDirection: this.state.sortDirection === 'asc' ? 'desc' : 'asc'\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://api.football-data.org/v2/competitions/2021/teams?season=2019', {\r\n      headers: {\r\n        'X-Auth-Token': '6324a72164424ef6ae805e7e77ba04a8'\r\n      }\r\n    })\r\n    .then(data => data.json())\r\n    .then((res) => {\r\n        store.dispatch({\r\n          type: 'SET_TEAMS',\r\n          teams: res.teams.map(team => {\r\n            team.isActive = false\r\n            return team\r\n          })\r\n        })\r\n      },\r\n      // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n      // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n      (error) => {\r\n        this.setState({\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th onClick={this.sortBy.bind(this, 'name')} className=\"pointer\">Название команды</th>\r\n            <th>Сокращение</th>\r\n            <th>Стадион</th>\r\n            <th onClick={this.sortBy.bind(this, 'founded')} className=\"pointer\">Год основания</th>\r\n            <th>Логотип</th>\r\n            <th>Действия</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            store.getState().listState.teams.map((team, index) =>\r\n              <tr key={team.id}>\r\n                <td>{index + 1}</td>\r\n                <td onClick={this.changeName.bind(this, team.id)}>\r\n                  { team.isActive ? (\r\n                    <Form.Group controlId=\"Name\">\r\n                      <Form.Label>Название команды</Form.Label>\r\n                      <Form.Control \r\n                        autoFocus\r\n                        placeholder=\"Название\"\r\n                        onBlur={this.saveName.bind(this, team.id)}\r\n                        onKeyDown={(e) => this.handleEnter(team.id, e)}\r\n                        className=\"text-muted\"\r\n                        value={this.state.name} \r\n                        onChange={this.handleChangeName}\r\n                      />\r\n                    </Form.Group>\r\n                  ) : ( team.name\r\n                  )}\r\n                </td>\r\n                <td>{team.tla}</td>\r\n                <td>{team.venue}</td>\r\n                <td>{team.founded}</td>\r\n                <td><img src={team.crestUrl} alt={team.name} width=\"75\" height=\"75\"/></td>\r\n                <td>\r\n                  <Link to={`/teams/${team.id}`}>\r\n                    <Button variant=\"primary\">Подробнее</Button>\r\n                  </Link>\r\n                  <Button variant=\"danger\" onClick={this.deleteTeam.bind(this, team.id)}>Удалить</Button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(store) {\r\n  return {\r\n    teams: store.listState.teams\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List)","/* eslint-disable array-callback-return */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport store from './store';\r\nimport Moment from 'react-moment'\r\nimport Flag from 'react-world-flags'\r\nimport Countries from './countries.json'\r\nimport { Table, Form, Pagination } from 'react-bootstrap'\r\n\r\nclass Team extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      squad: [],\r\n      name: '',\r\n      filters: {\r\n        position: '',\r\n        nationality: '',\r\n      },\r\n      pages: 0,\r\n      perPage: 10,\r\n      currentPage: 1,\r\n      sortDirection: 'asc',\r\n    }\r\n    this.handleChangeNationality = this.handleChangeNationality.bind(this)\r\n    this.handleChangePosition = this.handleChangePosition.bind(this)\r\n    this.changePage = this.changePage.bind(this)\r\n  }\r\n\r\n  sortBy(field) {\r\n    let items = this.state.squad.slice()\r\n    let sortDirection = this.state.sortDirection\r\n    items.sort((a, b) => {\r\n      if (a[field] < b[field]) {\r\n        return sortDirection === 'desc' ? 1 : -1\r\n      }\r\n      if (a[field] > b[field]) {\r\n        return sortDirection === 'desc' ? -1 : 1\r\n      }\r\n      return 0\r\n    })\r\n    this.setState({\r\n      squad: items,\r\n      sortDirection: this.state.sortDirection === 'asc' ? 'desc' : 'asc'\r\n    })\r\n  }\r\n\r\n  handleChangeNationality(event) {\r\n    this.setState({filters: {\r\n      nationality: event.target.value,\r\n      position: this.state.filters.position\r\n    }});\r\n  }\r\n\r\n  handleChangePosition(event) {\r\n    this.setState({filters: {\r\n      position: event.target.value,\r\n      nationality: this.state.filters.nationality\r\n    }});\r\n  }\r\n\r\n  changePage(page) {\r\n    this.setState({currentPage: page})\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match\r\n    fetch(`https://api.football-data.org/v2/teams/${params.id}`, {\r\n      headers: {\r\n        'X-Auth-Token': '6324a72164424ef6ae805e7e77ba04a8'\r\n      }\r\n    })\r\n    .then(data => data.json())\r\n    .then(\r\n      (res) => {\r\n\r\n        store.dispatch({\r\n          type: 'SET_PLAYERS',\r\n          squad: res.squad.map(item => {\r\n            if (!item.position) item.position = 'Coach'\r\n            return item\r\n          }),\r\n        })\r\n\r\n        store.dispatch({\r\n          type: 'SET_PAGES',\r\n          pages: Math.ceil(res.squad.length / 10)\r\n        })\r\n\r\n\r\n        // this.setState({\r\n        //   squad: result.squad.map(item => {\r\n        //     if (!item.position) item.position = 'Coach'\r\n        //     return item\r\n        //   }),\r\n        //   pages: Math.ceil(result.squad.length / 10)\r\n        // })\r\n      },\r\n      // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n      // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n      (error) => {\r\n        this.setState({\r\n          error\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    function findCountryCode(nationality) {\r\n      const entry = Object.entries(Countries).find((country) => country[1] === nationality)\r\n      return entry ? entry[0] : '_unknown'\r\n    }\r\n\r\n    let items = []\r\n    for (let page = 1; page <= store.getState().teamState.pages; page++) {\r\n      items.push(\r\n        <Pagination.Item \r\n          key={page} \r\n          active={page === this.state.currentPage}\r\n          onClick={() => this.changePage(page)}\r\n        >\r\n          {page}\r\n        </Pagination.Item>,\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th onClick={this.sortBy.bind(this, 'name')} className=\"pointer\">Имя и фамилия</th>\r\n              <th>\r\n                <span>Позиция на поле</span>\r\n                <Form.Control \r\n                  as=\"select\"\r\n                  value={this.state.filters.position} \r\n                  onChange={this.handleChangePosition}\r\n                >\r\n                <option key=\"0\" value=\"\">Все</option>\r\n                  {\r\n                    Array.from(new Set(store.getState().teamState.squad.map(item => item.position)))\r\n                      .map((item, index) =>\r\n                        <option key={index + 1} value={item}>{item}</option>\r\n                    )\r\n                  }\r\n                </Form.Control>\r\n              </th>\r\n              <th>\r\n                <span>Национальность</span>\r\n                <Form.Control \r\n                  as=\"select\"\r\n                  value={this.state.filters.nationality} \r\n                  onChange={this.handleChangeNationality}\r\n                >\r\n                <option key=\"0\" value=\"\">Все</option>\r\n                  {\r\n                    Array.from(new Set(store.getState().teamState.squad.map(item => item.nationality)))\r\n                      .map((item, index) =>\r\n                        <option key={index + 1} value={item}>{item}</option>\r\n                    )\r\n                  }\r\n                </Form.Control>\r\n              </th>\r\n              <th onClick={this.sortBy.bind(this, 'dateOfBirth')} className=\"pointer\">Дата рождения</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              store.getState().teamState.squad\r\n              .filter(item => {\r\n                let nationality = this.state.filters.nationality,\r\n                    position = this.state.filters.position\r\n                if ((!nationality || item.nationality === nationality)\r\n                && (!position || item.position === position)) return item\r\n              })\r\n              .filter((item, i) => {\r\n                let current = this.state.currentPage,\r\n                    perPage = this.state.perPage\r\n                if ((i < current * perPage) && (i >= ((current - 1) * perPage))) return item\r\n              })\r\n              .map((item, index) =>\r\n                <tr key={item.id}>\r\n                  <td>{(this.state.currentPage - 1) * this.state.perPage + index + 1}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.position}</td>\r\n                  <td>        \r\n                    <Flag \r\n                      code={findCountryCode(item.nationality)} \r\n                      className=\"flagImage\"\r\n                      width={100}\r\n                      alt={item.nationality}\r\n                      fallback={ <span className=\"flagImage\">No image</span> }\r\n                    />{item.nationality}\r\n                </td>\r\n                  <td><Moment format=\"DD.MM.YYYY\" date={item.dateOfBirth}/></td>\r\n                </tr>\r\n              )\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Pagination>\r\n            <Pagination.First />\r\n            <Pagination.Prev />\r\n            {/* {this.state.currentPage - 2 > 1 &&\r\n              <Pagination.Item>{1}</Pagination.Item>\r\n              <Pagination.Ellipsis />\r\n            } */}\r\n            {items}\r\n            {/* {search.page + 2 < search.pages &&\r\n              <Pagination.Ellipsis />\r\n              <Pagination.Item>{search.pages}</Pagination.Item>\r\n            } */}\r\n            <Pagination.Next />\r\n            <Pagination.Last />\r\n          </Pagination>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(store) {\r\n  return {\r\n    squad: store.teamState.squad,\r\n    pages: store.teamState.pages,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Team)","import React from 'react'\r\n\r\nconst NotFound = () => <h1>Not found</h1>\r\n\r\nexport default NotFound","import React from 'react'\r\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom'\r\nimport App from './App'\r\nimport List from './List'\r\nimport Team from './Team'\r\nimport NotFound from './NotFound'\r\n\r\nconst router = (\r\n  <Router>\r\n    <Link to=\"/teams\">TEAMS</Link>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route exact path=\"/teams\" component={List} />\r\n      <Route path=\"/teams/:id\" component={Team} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\nexport default router","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport router from './router'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\n\r\nReactDOM.render(<Provider store={store}>{router}</Provider>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()"],"sourceRoot":""}
{"version":3,"sources":["App.js","List.js","Team.js","NotFound.js","serviceWorker.js","index.js"],"names":["App","List","props","state","items","name","sortDirection","handleChangeName","bind","event","this","setState","target","value","id","map","item","isActive","index","findIndex","slice","concat","e","key","saveName","field","sort","a","b","fetch","headers","then","res","json","result","teams","error","Table","striped","bordered","hover","variant","onClick","sortBy","changeName","Form","Group","controlId","Label","Control","autoFocus","placeholder","onBlur","onKeyDown","handleEnter","className","onChange","tla","venue","founded","src","crestUrl","alt","width","height","to","Button","deleteTeam","React","Component","Team","squad","params","match","findCountryCode","nationality","entry","Object","entries","Countries","find","country","number","push","Pagination","Item","active","position","code","fallback","format","date","dateOfBirth","NotFound","Boolean","window","location","hostname","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbc1ca4a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction App() {\r\n  return (\r\n    <h1>Home</h1>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Form, Button } from 'react-bootstrap';\r\n\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      items: [],\r\n      name: '',\r\n      sortDirection: 'asc',\r\n    }\r\n    this.handleChangeName = this.handleChangeName.bind(this)\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  changeName(id) {\r\n    this.setState({\r\n      items: this.state.items.map(item => {\r\n        if (item.id === id) item.isActive = true\r\n        return item\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  saveName(id) {\r\n    this.setState({\r\n      items: this.state.items.map(item => {\r\n        if (item.id === id) {\r\n          if (this.state.name !== '') item.name = this.state.name\r\n          item.isActive = false\r\n        }\r\n        return item\r\n      }),\r\n      name: ''\r\n    })\r\n  }\r\n\r\n  deleteTeam(id) {\r\n    let index = this.state.items.findIndex(item => item.id === id)\r\n    this.setState({\r\n      items: this.state.items.slice(0, index).concat(this.state.items.slice(index + 1))\r\n    })\r\n  }\r\n\r\n  handleEnter(id, e) {\r\n    if (e.key === 'Enter') {\r\n      this.saveName(id)\r\n    }\r\n  }\r\n\r\n  sortBy(field) {\r\n    let items = this.state.items.slice()\r\n    let sortDirection = this.state.sortDirection\r\n    items.sort((a, b) => {\r\n      if (a[field] < b[field]) {\r\n        return sortDirection === 'desc' ? 1 : -1\r\n      }\r\n      if (a[field] > b[field]) {\r\n        return sortDirection === 'desc' ? -1 : 1\r\n      }\r\n      return 0\r\n    })\r\n    this.setState({\r\n      items: items,\r\n      sortDirection: this.state.sortDirection === 'asc' ? 'desc' : 'asc'\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://api.football-data.org/v2/competitions/2021/teams?season=2019', {\r\n      headers: {\r\n        'X-Auth-Token': '6324a72164424ef6ae805e7e77ba04a8'\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          items: result.teams.map(item => {\r\n            item.isActive = false\r\n            return item\r\n          })\r\n        });\r\n      },\r\n      // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n      // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n      (error) => {\r\n        this.setState({\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th onClick={this.sortBy.bind(this, 'name')}>Название команды</th>\r\n            <th>Сокращение</th>\r\n            <th>Стадион</th>\r\n            <th onClick={this.sortBy.bind(this, 'founded')}>Год основания</th>\r\n            <th>Логотип</th>\r\n            <th>Действия</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            this.state.items.map((item, index) =>\r\n              <tr key={item.id}>\r\n                <td>{index + 1}</td>\r\n                <td onClick={this.changeName.bind(this, item.id)}>\r\n                  { item.isActive ? (\r\n                    <Form.Group controlId=\"Name\">\r\n                      <Form.Label>Название команды</Form.Label>\r\n                      <Form.Control \r\n                        autoFocus\r\n                        placeholder=\"Название\"\r\n                        onBlur={this.saveName.bind(this, item.id)}\r\n                        onKeyDown={(e) => this.handleEnter(item.id, e)}\r\n                        className=\"text-muted\"\r\n                        value={this.state.name} \r\n                        onChange={this.handleChangeName}\r\n                      />\r\n                    </Form.Group>\r\n                  ) : ( item.name\r\n                  )}\r\n                </td>\r\n                <td>{item.tla}</td>\r\n                <td>{item.venue}</td>\r\n                <td>{item.founded}</td>\r\n                <td><img src={item.crestUrl} alt={item.name} width=\"75\" height=\"75\"/></td>\r\n                <td>\r\n                  <Link to={`/teams/${item.id}`}>\r\n                    <Button variant=\"primary\">Подробнее</Button>\r\n                  </Link>\r\n                  <Button variant=\"danger\" onClick={this.deleteTeam.bind(this, item.id)}>Удалить</Button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport Flag from 'react-world-flags'\r\nimport Countries from './countries.json'\r\nimport { Table, Pagination } from 'react-bootstrap'\r\n\r\nclass Team extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      squad: [],\r\n      name: '',\r\n      sortDirection: 'asc',\r\n    }\r\n  }\r\n\r\n  sortBy(field) {\r\n    let items = this.state.squad.slice()\r\n    let sortDirection = this.state.sortDirection\r\n    items.sort((a, b) => {\r\n      if (a[field] < b[field]) {\r\n        return sortDirection === 'desc' ? 1 : -1\r\n      }\r\n      if (a[field] > b[field]) {\r\n        return sortDirection === 'desc' ? -1 : 1\r\n      }\r\n      return 0\r\n    })\r\n    this.setState({\r\n      squad: items,\r\n      sortDirection: this.state.sortDirection === 'asc' ? 'desc' : 'asc'\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match\r\n    fetch(`https://api.football-data.org/v2/teams/${params.id}`, {\r\n      headers: {\r\n        'X-Auth-Token': '6324a72164424ef6ae805e7e77ba04a8'\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        this.setState({\r\n          squad: result.squad\r\n        });\r\n      },\r\n      // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n      // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n      (error) => {\r\n        this.setState({\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    function findCountryCode(nationality) {\r\n      const entry = Object.entries(Countries).find((country) => country[1] === nationality)\r\n      return entry ? entry[0] : '_unknown'\r\n    }\r\n\r\n    let active = 1\r\n    let items = []\r\n    for (let number = 1; number <= 5; number++) {\r\n      items.push(\r\n        <Pagination.Item key={number} active={number === active}>\r\n          {number}\r\n        </Pagination.Item>,\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th onClick={this.sortBy.bind(this, 'name')}>Имя и фамилия</th>\r\n              <th>Позиция на поле</th>\r\n              <th>Национальность</th>\r\n              <th onClick={this.sortBy.bind(this, 'dateOfBirth')}>Дата рождения</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              this.state.squad.map((item, index) =>\r\n                <tr key={item.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.position}</td>\r\n                  <td>        \r\n                    <Flag \r\n                      code={findCountryCode(item.nationality)} \r\n                      className=\"flagImage\"\r\n                      width={100}\r\n                      alt={item.nationality}\r\n                      fallback={ <span className=\"flagImage\">No image</span> }\r\n                    />{item.nationality}\r\n                </td>\r\n                  <td><Moment format=\"DD.MM.YYYY\" date={item.dateOfBirth}/></td>\r\n                </tr>\r\n              )\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Pagination>{items}</Pagination>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Team","import React from 'react'\r\n\r\nconst NotFound = () => <h1>Not found</h1>\r\n\r\nexport default NotFound","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport List from './List'\r\nimport Team from './Team'\r\nimport NotFound from './NotFound'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst routing = (\r\n    <Router>\r\n      <Link to=\"/teams\">TEAMS</Link>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route exact path=\"/teams\" component={List} />\r\n        <Route path=\"/teams/:id\" component={Team} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n  ReactDOM.render(routing, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()"],"sourceRoot":""}